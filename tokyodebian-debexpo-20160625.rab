= debexpoを\nハックするには

: subtitle
  How to hack mentors.d.n
: author
  Kentaro Hayashi
: institution
  ClearCode Inc.
: content-source
  TokyoDebian, 141th
: date
  2016-06-25
: allotted-time
  20m
: theme
  .

= 自己紹介(1)

  # image
  # relative-height = 40
  # src = https://pbs.twimg.com/profile_images/2290018079/cvcy12slbeva80jboxzf_400x400.png

* Twitter/GitHub: @kenhys
* 所属: ((*トラックポイント・ソフトドーム派*))

= 自己紹介(2)

  # image
  # relative-height = 60
  # src = images/track-points.png

* トラックポイント・ソフトドーム派

= 参考画像の出典

  # image
  # relative-height = 80
  # src = images/irasutoya.png

* http://www.irasutoya.com/

= 閑話休題

そろそろ本題へ

= 今日の話

* debexpoとは？\n

* なぜdebexpoをハックする必要が？\n

* どうやってハックしたのか？\n

= 今日の話

* ((*debexpoとは？*))

* なぜdebexpoをハックする必要が？

* どうやってハックしたのか？

= debexpoとは?

* mentors.d.nを支えるウェブアプリケーション

* リポジトリ名がdebexpo

= mentors.d.nとは?

  # image
  # relative-height = 80
  # src = images/mentors.d.n.png

* http://mentors.debian.net

= debexpoの由来

  # blockquote
  # title = https://workaround.org/project/debexpo
  The new project was called "debexpo" because it was supposed to become an ((*expo*))sition for ((*Deb*))ian packages.

= debexpo概要

* Python製
* Pylonsフレームワーク採用
* テンプレートエンジンはMako

= Pylons\n(('note:http://www.pylonsproject.org/'))

* Railsっぽいフレームワーク
* 2011年にメンテナンスモード入り
* 後継はPyramidに

= debexpoの歴史(1)

* 2003年
  * 最初はPerlで書かれていた
* その後、Pythonで書き直し

= debexpoの歴史(2)

* 2008年
  * Google SoCで開発が進む
* 2009-2010年
  * http://expo.debian.net/ 運用開始
* 2011年 そしてmentors.d.nへ


= debexpoの役割

* ITP,RFSのためのアップロード先
  * non-DDはパッケージを直接アップロードできない
  * スポンサーが必要

= mentors.d.nを\n経由しなくてもいいけど

* 自前のサイトにアップロードするとか面倒
* 公開の場でやりとりするほうがいいのでおすすめしない

= ITP,RFSのおさらい

mentors.d.nの\n使いかた ITP編/RFS編

= mentors.d.nの\n使いかた ITP編(1)

* パッケージをDebianにもっていきたい
* ITPのメールをsubmit@bugs.d.oへ
* パッケージをmentors.d.nにdput

= mentors.d.nの\n使いかた ITP編(2)

* RFSのメールをsubmit@bugs.d.oへ
* レビュー & 修正 & dput
* DDによるupload

= mentors.d.nの\n使いかた RFS編(1)

* upstreamの新リリース
* 追従してパッケージをdput
* RFSのメールをsubmit@bugs.d.oへ

= mentors.d.nの\n使いかた RFS編(2)

* レビュー & 修正 & dput
* DDによるupload

= mentors.d.nオススメ

* パッケージのチェックもしてくれる
* RFSのテンプレートも生成してくれる

= mentors.d.nオススメ

* ((*パッケージのチェックもしてくれる*))
* RFSのテンプレートも生成してくれる

= チェック結果がみれる

  # image
  # relative-height = 80
  # src = images/qa-information.png

* lintianの警告とか

= mentors.d.nオススメ

* パッケージのチェックもしてくれる
* ((*RFSのテンプレートも生成してくれる*))

= RFSのテンプレート生成

  # image
  # relative-height = 80
  # src = images/view-rfs-template.png

* あとはメールするだけ(※)

= 今日の話

* debexpoとは？

* ((*なぜdebexpoをハックする必要が？*))

* どうやってハックしたのか？

= mentors.d.nが\nオススメな理由

= (再)mentors.d.nが\nオススメな理由

* RFSテンプレート生成
* あとはメールを出すだけ
* (('wait'))((*と言ったが、あれは嘘だ*))

= 論より証拠

実際のRFS templateを\nお見せしよう

= 証拠物件(1)

  # image
  # relative-height = 80
  # src = images/rfs-template-pithole.png

* [fill in]の文字がちらほら

= 証拠物件(2)

  # image
  # relative-height = 70
  # src = images/rfs-template-pithole2.png

* ほかにも穴埋めが必要


= 編集すべき箇所(1)

  # image
  # relative-width = 100
  # src = images/rfs-template-fill-in1.png

* Subject:に種別を書け

= 編集すべき箇所(2)

  # image
  # relative-width = 100
  # src = images/rfs-template-fill-in2.png

* Severity:を書け

= 編集すべき箇所(3)

  # image
  # relative-width = 100
  # src = images/rfs-template-fill-in3.png

* Upstream,URL,License:を書け

= 編集すべき箇所(4)

  # image
  # relative-width = 100
  # src = images/rfs-template-fill-in4.png

* Changelogを書け

= これで終わりだと思ったか？

= 編集すべき箇所(5)

  # image
  # relative-width = 100
  # src = images/rfs-template-fill-in5.png

* さりげなく埋めこまれたhelloとexample.com

= これでメールが出せる

= と、思うでしょ？

* 私も最初はそう思いました

= 先頭に埋めこまれた\nスペース2つ

  # image
  # relative-width = 100
  # src = images/rfs-template-pithole3.png

* コマンドメールであることを思いだそう
* (('wait'))((*もちろんエラーになります*))

= Q. なぜdebexpoを\nハックするのか？

* A. RFSテンプレートの\n残念っぷりをどうにかしたい

= 今日の話

* debexpoとは？

* なぜdebexpoをハックする必要が？

* ((*どうやってハックしたのか？*))

= あらすじ

* upstream探し
* ドキュメント探し
* まずは動かしてみる
* あたりをつけて修正
* そしてPRへ

= 特別なことは何も

よくある\nフリーソフトウェアの修正

= あらすじ

* ((*upstream探し*))
* ドキュメント探し
* まずは動かしてみる
* あたりをつけて修正
* そしてPRへ

= upstream探し(1)

  # image
  # relative-width = 100
  # src = images/source-code-and-bugs.png

* 下部にリンクがきちんとある
* aliothをみればいいとわかる

= upstream探し(2)

  # image
  # relative-height = 80
  # src = images/last-change-on-alioth.png

* 最近はコミットがない

= ちょっと不安に

* よく使われているならそこそこメンテされているイメージ
* 実際にはそうでもなかった

= upstream探し(3)\n

  # image
  # relative-height = 70
  # src = images/last-change-on-github.png

* GitHubのほうが実は新しい
  * (('tag:x-small'))https://github.com/debexpo/debexpo


= upstream探し(4)

* aliothがmaster
* GitHubのをマージという運用

= あらすじ

* upstream探し
* ((*ドキュメント探し*))
* まずは動かしてみる
* あたりをつけて修正
* そしてPRへ

= ドキュメント探し

* docs/*にドキュメントが整備
  * docs/installing.rstを参照

= あらすじ

* upstream探し
* ドキュメント探し
* ((*まずは動かしてみる*))
* あたりをつけて修正
* そしてPRへ

= まずは動かしてみる

* セットアップ方法は3種

  * 既存システムにインストール
  * virtualenvでインストール
  * Virtualboxでインストール

= まずはVirtualboxで

* 環境を分けたいのでVirtualboxを選択

= Vagrantfileがアレ

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "chef/debian-7.6"

* Debian 7.6 (2014年7月12日)？
* Debian 7.10でてるよ？

= vagrant upしてみると

    [56714]% vagrant up
    Bringing machine 'default' up with 'virtualbox' provider...
    ==> default: Box 'chef/debian-7.6' could not be found. Attempting to find and install...
      default: Box Provider: virtualbox
      default: Box Version: >= 0
    The box 'chef/debian-7.6' could not be found or
    could not be accessed in the remote catalog. If this is a private
    box on HashiCorp's Atlas, please verify you're logged in via
    `vagrant login`. Also, please double-check the name. The expanded
    URL and error message are shown below:
  
    URL: ["https://atlas.hashicorp.com/chef/debian-7.6"]
    Error: The requested URL returned error: 404 Not Found

* boxが見つからなくてコケる

= Vagrantfileを修正

* vagrant up --provision
* vagrant ssh

= vagrant sshして\nサーバーを起動

    cd debexpo
    . venv/bin/activate
    paster serve development.ini

= 5000ポートでサーバー起動

  # image
  # relative-height = 80
  # src = images/debexpo-on-localhost.png

* ブラウザでアクセス可能に

= ユーザーの追加(1)

* 方法は2つある

  * ブラウザ経由で追加
  * JSONで追加

= ユーザーの追加(2)

  # image
  # relative-height = 80
  # src = images/debexpo-sign-me-up.png

* ブラウザ経由で追加

= ユーザーの追加(3)

* JSONで追加するなら

    {
      "realname":"Hayashi Kentaro",
      "password":"password",
      "email":"hayashi@clear-code.com"
    }

= ユーザーの追加(4)

* 追加用のスクリプトを利用

    python ./bin/user_importer.py \
    -i development.ini -u user.json

= アカウントの有効化

* verification (ログインに必要)
* dmup (アップロードに必要)

= verificationの設定

  # image
  # relative-width = 90
  # src = images/update-verification.png

* verificationを空にする
  * メールの確認をバイパス

= dmupの設定

  # image
  # relative-width = 90
  # src = images/update-dmup.png

* dmupフィールドを更新
  * 同意したことにする

= .dput.cfの設定をする

    [debexpo]
    fqdn = localhost:5000
    incoming = /upload/kenhys@gmail.com/password
    method = http
    allow_unsigned_uploads = 0

* アップロードの準備をする

= 試しにパッケージをアップロード


    Uploading to debexpo (via http to localhost:5000):
    Uploading groonga_6.0.2-1.dsc: Upload failed: 500 Internal Server Error

* ((*500 Internal Server Error*))

= さっそくバグを踏む

  # image
  # relative-width = 90
  # src = images/find-a-debexpo-bug.png

* あるべきディレクトリがないというオチ

= 成果物をPR#35で出した

  # image
  # relative-width = 60
  # src = images/debexpo-pr35.png

(('tag:x-small'))https://github.com/debexpo/debexpo/pull/35

= PR#35の経過(1)


* May 4
  * @olasdさんから好意的な反応
* May 14
  * どうなった？とつついてみるも反応なし

= PR#35の経過(2)

* May 21
  * Debian勉強会でまだマージされてない話をする
  * あれやこれやでしばし放置

= PR#35の経過(3)

* June 19
  * @paulproteusさんをつついてみる
* June 19
  * 20日にみとくわ、と@paulproteusさんから反応あり

= PR#35の経過(4)

  # image
  # relative-width = 100
  # src = images/debexpo-pr35-paulproteus.png

* どうもDebConf16待ち

= まとめ

* debexpoとはmentors.d.nのこと
* RFSテンプレートが残念だったのでカッとなってやった
* プラグインで広がる可能性

